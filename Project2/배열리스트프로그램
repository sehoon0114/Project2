#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

#define MAX_SIZE 100

int list[MAX_SIZE];
int count = 0; // 리스트의 현재 길이

// 리스트에 숫자를 삽입하는 함수
void insert(int num, int pos) {
    if (count >= MAX_SIZE) {
        printf("리스트가 가득차서 삽입할 수 없습니다.\n");
        return;
    }

    if (pos < 0 || pos > count) {
        printf("잘못된 위치입니다.\n");
        return;
    }

    // 삽입할 위치에 있는 원소부터 끝까지 한 칸씩 뒤로 이동
    int i;
    for (i = count - 1; i >= pos; i--) {
        list[i + 1] = list[i];
    }

    list[pos] = num;
    count++;

    printf("데이터의 이동 횟수: %d\n", count - pos - 1);
}

// 리스트에서 숫자를 삭제하는 함수
void delete(int pos) {
    if (count <= 0) {
        printf("리스트가 비어있습니다.\n");
        return;
    }

    if (pos < 0 || pos >= count) {
        printf("잘못된 위치입니다.\n");
        return;
    }

    // 삭제할 위치 이후의 원소들을 모두 한 칸씩 앞으로 이동
    int i;
    for (i = pos + 1; i < count; i++) {
        list[i - 1] = list[i];
    }

    count--;

    printf("데이터의 이동 횟수: %d\n", count - pos);
}

// 리스트를 출력하는 함수
void print_list() {
    if (count <= 0) {
        printf("리스트가 비어있습니다.\n");
        return;
    }

    printf("리스트: ");
    int i;
    for (i = 0; i < count; i++) {
        printf("%d ", list[i]);
    }
    printf("\n");
}

int main() {
    int choice;
    int num, pos;

    while (1) {
        printf("1.리스트에 추가 \n2.리스트에서 삭제 \n3.리스트 출력 \n0.프로그램 종료\n");
        printf("선택: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("추가할 숫자를 입력하세요: ");
            scanf("%d", &num);
            printf("추가할 위치를 입력하세요: ");
            scanf("%d", &pos);
            insert(num, pos);
            break;
        case 2:
            printf("삭제할 위치를 입력하세요: ");
            scanf("%d", &pos);
            delete(pos);
            break;
        case 3:
            print_list();
            break;
        case 0:
            printf("프로그램을 종료합니다.\n");
            return 0;
        default:
            printf("잘못된 선택입니다.\n");
            break;
        }
    }
}
